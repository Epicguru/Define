name: Build & Test

on:
  pull_request:
    branches: [ master, develop ]

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4.1.1

      - name: Setup .NET
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: 8.0.x

      # This global tool is required to build Monogame content which is used in a test.
      - name: Install mgcb
        run: dotnet tool install dotnet-mgcb --global

      # Grab dependencies like NuGet packages.
      - name: Restore dependencies
        run: dotnet restore
        
      # Build and test in debug mode:
      - name: Test
        run: dotnet test --verbosity normal --logger "trx;LogFileName=test-results.trx" --no-restore

      # Generate a test report.
      - name: Test Report
        uses: dorny/test-reporter@v1.9.0
        if: success() || failure()
        with:
          name: Test Report
          path: Define*Tests/TestResults/test-results.trx
          reporter: dotnet-trx

      # See this issue here for the reason why I am running test twice:
      # https://github.com/microsoft/vstest/issues/2334
      - name: Test (second pass)
        run: dotnet test --collect:"XPlat Code Coverage" --verbosity normal --no-restore --no-build --results-directory coverage

      # This step is required because the test projects reference a common base project,
      # which causes wierdness with cobertura by generating duplicate coverage files.
      - name: Merge coverage reports
        run: |
          dotnet tool install --global dotnet-coverage
          dotnet-coverage merge coverage/*/coverage.cobertura.xml --output merged.cobertura.xml --output-format cobertura --remove-input-files

      # Generate code coverage report.
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: merged.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '70 75'

      # Post the results of the previous step as a PR comment.
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2.8.0
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Write coverage to step summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
